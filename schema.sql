CREATE TABLE MUSICIAN (
    nickname VARCHAR(16) UNIQUE NOT NULL,
    firstName VARCHAR(20) NOT NULL,
    lastName VARCHAR(20) NOT NULL, 
    e_mail VARCHAR(100) UNIQUE,
    locality VARCHAR(16) NOT NULL, 
    bestInstrument VARCHAR(16) NOT NULL,
    telephoneNumber VARCHAR(16) UNIQUE NOT NULL,
    isCertified BIT NOT NULL,
    isMaster BIT NOT NULL,
    PRIMARY KEY (nickname)
);

CREATE TABLE GENRE(
    genreName VARCHAR(16) UNIQUE NOT NULL,
    genreDescription VARCHAR(128) NOT NULL,
    origin VARCHAR(256) NOT NULL,
    nickname VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY (genreName); 
)

CREATE TABLE INFLUENCE(
    genreName VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    nickname VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY (genreName, nickname)
)

CREATE TABLE FOLLOW(
    genreName VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    nickname VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY (genreName, nickname)
)

CREATE TABLE DISCUSSION(
    discussionID INT UNIQUE NOT NULL AUTO_INCREMENT,
    timestampDiscussion TIMESTAMP NOT NULL,
    title VARCHAR(16) NOT NULL,
    average INT NOT NULL,
    PRIMARY KEY (discussionID)
)

CREATE TABLE COMMENT(
    commentText VARCHAR(32) NOT NULL,
    timestampComment TIMESTAMP NOT NULL,
    commentID INT UNIQUE NOT NULL AUTO_INCREMENT,
    discussionID INT NOT NULL FOREIGN KEY REFERENCES DISCUSSION 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY(commentID)
)

CREATE TABLE POST(
    discussionID INT NOT NULL FOREIGN KEY REFERENCES DISCUSSION 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,

    commentID INT NOT NULL FOREIGN KEY REFERENCES COMMENT 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,

    nickname VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,

    PRIMARY KEY(discussionID, commentID, nickname)
)

CREATE TABLE REACTION(
    nickname VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    discussionID INT NOT NULL FOREIGN KEY REFERENCES DISCUSSION 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    vote ENUM('upvote', 'downvote'),
    dateAndTime TIMESTAMP NOT NULL,
    PRIMARY KEY (nickname, discussionID)
) 

CREATE TABLE HASHTAG(
    hashtagName VARCHAR(10) UNIQUE NOT NULL,
    nickname VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY (hashtagName)
)

CREATE TABLE POST_REFERENCE(
    discussionID INT NOT NULL FOREIGN KEY REFERENCES DISCUSSION 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    hashtagName VARCHAR(10) NOT NULL FOREIGN KEY REFERENCES HASHTAG
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY(discussionID, hashtagName)
)

CREATE TABLE CHAT_PARTICIPANT(
    participantID INT UNIQUE NOT NULL AUTO_INCREMENT,
    entryDate Date UNIQUE NOT NULL,
    exitDate Date UNIQUE,
    nickname VARCHAR(16) NOT NULL FOREIGN KEY REFERENCES MUSICIAN 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY(participantID)
)

CREATE TABLE CHAT(
    chatID INT UNIQUE NOT NULL AUTO_INCREMENT,
    participantID INT NOT NULL FOREIGN KEY REFERENCES CHAT_PARTICIPANT 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    chatName VARCHAR(10) NOT NULL,
    PRIMARY KEY(chatID)
)

CREATE TABLE MESSAGE(
    messageID INT UNIQUE NOT NULL AUTO_INCREMENT,
    chatID INT NOT NULL FOREIGN KEY REFERENCES CHAT 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    participantID INT NOT NULL FOREIGN KEY REFERENCES CHAT_PARTICIPANT 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    messageText TINYTEXT NOT NULL,
    PRIMARY KEY(messageID)
)

CREATE TABLE BAND(
    bandName VARCHAR(10) UNIQUE NOT NULL,
    foundationDate DATE NOT NULL,
)

CREATE TABLE ALBUM(
    albumID INT UNIQUE NOT NULL AUTO_INCREMENT,
    albumName VARCHAR(10) NOT NULL,
    realeseDate DATE NOT NULL
)

CREATE TABLE SONG(
    songID INT UNIQUE NOT NULL AUTO_INCREMENT,
    musicTrack INT NOT NULL,
    songName VARCHAR(10) NOT NULL,
    duration INT NOT NULL,
    albumID INT NOT NULL FOREIGN KEY REFERENCES ALBUM 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY(songID)
)

CREATE TABLE WRITING(
    songID INT NOT NULL FOREIGN KEY REFERENCES SONG 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    nickname VARCHAR(16) FOREIGN KEY REFERENCES MUSICIAN
        ON DELETE CASCADE
        ON UPDATE NO ACTION, 
    bandName VARCHAR(10) FOREIGN KEY REFERENCES BAND 
        ON DELETE CASCADE
        ON UPDATE NO ACTION, 
    PRIMARY KEY(songID)
)

CREATE TABLE RELEASE(
    albumID INT NOT NULL FOREIGN KEY REFERENCES ALBUM 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    nickname VARCHAR(16) FOREIGN KEY REFERENCES MUSICIAN
        ON DELETE CASCADE
        ON UPDATE NO ACTION, 
    bandName VARCHAR(10) FOREIGN KEY REFERENCES BAND 
        ON DELETE CASCADE
        ON UPDATE NO ACTION, 
    PRIMARY KEY(albumID)
)

CREATE TABLE APPARTAINANCE(
    genreName VARCHAR(16) FOREIGN KEY REFERENCES GENRE 
        ON DELETE CASCADE
        ON UPDATE NO ACTION, 
    songID INT NOT NULL FOREIGN KEY REFERENCES SONG 
        ON DELETE CASCADE
        ON UPDATE NO ACTION,
    PRIMARY KEY(genreName)
) 